def dockerRegistry = 'panoramaiubads/react-ui'
def registryCredential = 'docker-hub-credentials'
def jenkinsAppDir = 'panorama-ui/react-ui'
def remote = '149.165.157.145'

pipeline{
    agent none
    environment {
        registry = 'panoramaiubads/react-ui'
        registryCredential = 'docker-hub-credentials'
        dockerImage = ''
    }
    stages{
        stage('Cloning git repository') {
        /* Checking out to the repository */
            steps{
                checkout scm
                echo "Successfully cloned git repository"
            }
        }

        stage('Install dependencies') {
        /* Application dependencies installation*/
            steps{
                sh 'cd ${jenkinsAppDir}'
                sh 'npm install'
                echo "Succesfully installed npm packages"
            }
		    
	    }

        stage('Build Docker Image') {
        /* Build the docker image */
            steps{
                script{
                    sh 'cd ${jenkinsAppDir}'
                    dockerImage = docker.build registry+ ":$BUILD_NUMBER"
                }
                
            }
        }

        stage('Push Image to Dockerhub'){
        /* Push image to dockerhub */
            steps{
                script{
                    docker.withRegistry('https://registry.hub.docker.com', registryCredential ){
                    dockerImage.push("latest")
                    }
                }
            }    
        
        }

        stage('Clean up disk space') {
        /* Removing unused images to clean up disk space */
            steps{
                sh "docker system prune -af --volumes" 
            }
        }    

        stage('Kubernetes Cluster App Deployment'){
            steps{
                sshPublisher(publishers: [sshPublisherDesc(configName: 'jenkins-kubernetes-id', transfers: [sshTransfer(cleanRemote: false, excludes: '', execCommand: "", execTimeout: 120000, flatten: false, makeEmptyDirs: false, noDefaultExcludes: false, patternSeparator: '[, ]+', remoteDirectory: '/home/ubuntu/deploy', remoteDirectorySDF: false, removePrefix: "", sourceFiles: "${jenkinsAppDir}/panorama-ui.yaml")], usePromotionTimestamp: false, useWorkspaceInPromotion: false, verbose: false)])        
            }
            
        }
    }   
           
}