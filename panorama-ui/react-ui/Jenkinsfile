def dockerRegistry = 'panoramaiubads/react-ui'
def registryCredential = 'docker-hub-credentials'
def jenkinsAppDir = 'panorama-ui/react-ui'
def remote = '149.165.157.145'

pipeline{
    agent any
    environment {
        registry = 'panoramaiubads/react-ui'
        registryCredential = 'docker-hub-credentials'
        dockerImage = ''
        file_name = 'panorama-ui.yaml'
        remote_dir_path = ''
    }
    stages{
        stage('Cloning git repository') {
        /* Checking out to the repository */
            steps{
                checkout scm
                echo "Successfully cloned git repository"
            }
        }

        stage('Install dependencies') {
        /* Application dependencies installation*/
            steps{
                sh 'cd ${jenkinsAppDir}'
                sh 'npm install'
                echo "Succesfully installed npm packages"
            }
		    
	    }

        stage('Build Docker Image') {
        /* Build the docker image */
            steps{
                script{
                    dockerImage = docker.build(registry, "${jenkinsAppDir}")
                }
                
            }
        }

        stage('Push Image to Dockerhub'){
        /* Push image to dockerhub */
            steps{
                script{
                    docker.withRegistry('https://registry.hub.docker.com', registryCredential ){
                    dockerImage.push("latest")
                    }
                }
            }    
        
        }

        stage('Clean up disk space') {
        /* Removing unused images to clean up disk space */
            steps{
                sh "docker system prune -af --volumes" 
            }
        }    

        stage('Kubernetes Cluster App Deployment'){
            steps{
                sshPublisher(
                    publishers: [
                        sshPublisherDesc(
                            configName: 'ssh_kubemaster', 
                            transfers: [
                                sshTransfer(
                                    cleanRemote: false, 
                                    excludes: '', 
                                    execCommand: "touch /home/ubuntu/deploy/test.txt", 
                                    execTimeout: 120000, 
                                    flatten: false, 
                                    makeEmptyDirs: false, 
                                    noDefaultExcludes: false, 
                                    patternSeparator: '[, ]+', 
                                    remoteDirectory: 'deploy', 
                                    remoteDirectorySDF: false, 
                                    removePrefix: "", 
                                    sourceFiles: "panorama-ui.yaml"
                                )
                            ], 
                            usePromotionTimestamp: false, 
                            useWorkspaceInPromotion: false, 
                            verbose: false
                                )
                        ]
                )        
            }
            
        }

        stage('SSH transfer') {
            script {
                sshPublisher(
                    continueOnError: false, failOnError: true,
                    publishers: [
                        sshPublisherDesc(
                            configName: 'ssh_kubemaster',
                            verbose: true,
                            transfers: [
                                sshTransfer(
                                    execCommand: "wget https://raw.githubusercontent.com/airavata-courses/Panorama/cicd/panorama-ui/react-ui/panorama-ui.yaml"    
                                    execCommand: "kubectl apply -f ${file_name}"
                                )
                        ])
                ])
            }
        }
    }   
           
}